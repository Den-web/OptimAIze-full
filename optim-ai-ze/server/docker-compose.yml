version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.${NODE_ENV:-dev}
    container_name: optim-ai-ze-api
    restart: unless-stopped
    ports:
      - '5000:5000'
    volumes:
      - ./:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=5000
      - JWT_SECRET=${JWT_SECRET:-default_jwt_secret}
      - MONGODB_URI=mongodb://mongodb:27017/optim-ai-ze
      - LOG_LEVEL=debug
    networks:
      - optim-ai-ze-network
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongodb:
    image: mongo:5.0
    container_name: optim-ai-ze-mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
      - ./logs/mongodb:/var/log/mongodb
      - ./.docker/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    command: ["--logpath", "/var/log/mongodb/mongod.log", "--logappend", "--wiredTigerCacheSizeGB", "1"]
    environment:
      - MONGO_INITDB_DATABASE=optim-ai-ze
    networks:
      - optim-ai-ze-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  optim-ai-ze-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local 